<!--
    1.Write functions for working with shapes in  standard Planar coordinate system
        Points are represented by coordinates P(X, Y)
        Lines are represented by two points, marking their beginning and ending
        L(P1(X1,Y1),P2(X2,Y2))
        Calculate the distance between two points
        Check if three segment lines can form a triangle
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title> CheckNeighbours </title>
	<link href="styles/js-console.css" rel="stylesheet" />
    <style>
		input[type=text]{
			border:1px solid black;
			padding:5px 15px;
			background-color:black;
			color:white;
			font-family:Consolas;
			font-size:18px;		   
			margin-bottom:5px;
			background-color:Black;
		}

		a{
			color:white;
			background:green;
			border:1px solid black;
			padding:5px 15px;						
			text-decoration:none;	   
			display:inline-block;		 
			margin: 15px 0;
		}v
		a:hover{
			text-decoration:underline;
		}
	</style>
</head>
<body>
    <p>Write functions for working with shapes in  standard Planar coordinate system.</p>
           <p>1.1.Points are represented by coordinates P(X, Y)</p>
           <p>1.2.Lines are represented by two points, marking their beginning and ending</p>
           <p>1.3.L(P1(X1,Y1),P2(X2,Y2))</p>
           <p>1.4.Calculate the distance between two points</p>
           <p>1.5.Check if three segment lines can form a triangle</p>
	<script>
	    function Point(x, y) { //task 1.1
	        return { x: x, y: y };
	    }

	    function Line(point1, point2) { //task 1.2 and 1.3
	        return { pointA: point1, pointB: point2 };
	    }

	    function calculateDistance(point1, point2) { //task 1.4
	        return parseInt(Math.abs(point1.x - point2.x) * Math.abs(point1.x - point2.x)
    + Math.abs(point1.y - point2.y) * Math.abs(point1.y - point2.y));
	    }

	    function IsPossibleFormingATriangle(line1, line2, line3) { //task 1.5
	        var a = calculateDistance(line1.pointA, line1.pointB);
	        var b = calculateDistance(line2.pointA, line2.pointB);
	        var c = calculateDistance(line3.pointA, line3.pointB);
	        if (a + b > c && a + c > b && b + c > a) {
	            jsConsole.writeLine("true");
	        } else {
	            jsConsole.writeLine("false");
	        }
	    }

	    var p1 = Point(0, 1);
	    var p2 = Point(0, 0);
	    var p3 = Point(1, 0);

	    var l1 = Line(p1, p2);
	    var l2 = Line(p2, p3);
	    var l3 = Line(p1, p3);

	    var n = calculateDistance(p3, p2);
	    document.write(n);
	    IsPossibleFormingATriangle(l1, l2, l3);		
    </script>			  
</body>
</html>